#include <cstdio>
#define moda % 1000000007
long long n, k;
inline int read()
{
    int x = 0;
    bool flag = true;
    char ch = getchar();
    while (ch < '0' || ch > '9')
    {
        if (ch == '-')
        {
            flag = false;
        }
        ch = getchar();
    }
    while (ch >= '0' && ch <= '9')
    {
        x = (x << 1) + (x << 3) + ch - '0';
        ch = getchar();
    }
    if (flag)
        return x;
    return ~(x - 1);
}
inline void write(int X)
{
    if (X < 0)
    {
        X = ~(X - 1);
        putchar('-');
    }
    if (X > 9)
        write(X / 10);
    putchar(X % 10 + '0');
}
struct jz
{
    long long a[110][110];
    void cl()
    {
        for (int i = 0; i < 110; i++)
            for (int j = 0; j < 110; j++)
                a[i][j] = 1;
    }
};
jz &operator*(const jz &a, const jz &b)
{
    jz ans;
    ans.cl();
    for (long long ai = 1; ai <= n; ai++)
        for (long long bi = 1; bi <= n; bi++)
            for (long long i = 1; i <= n; i++)
                ans.a[ai][bi] = (ans.a[ai][bi] + ((a.a[ai][i] * b.a[i][bi]) moda) moda) moda;
    return ans;
}
void output(jz &a)
{
    for (long long i = 1; i <= n; i++)
    {
        for (long long j = 1; j <= n; j++)
        {
            write(a.a[i][j]);
            putchar(' ');
        }
        putchar('\n');
    }
}
void input(jz &a)
{
    n = read();
    k = read();
    for (long long i = 1; i <= n; i++)
        for (long long j = 1; j <= n; j++)
            a.a[i][j] = read();
}
int main()
{
    jz a, ans;
    int lk;
    ans.cl();
    a.cl();
    input(a);
    lk = k;
    do
    {
        if (k & 1)
            if (k == lk)
                ans = a;
            else
                ans = ans * a;
        a = a * a;
        k >>= 1;
    } while (k);
    output(ans);
    return 0;
}
/*
9 10000
1 2 3 4 5 6 7 8 9
1 2 3 4 5 6 7 8 9
1 2 3 4 5 6 7 8 9
1 2 3 4 5 6 7 8 9
1 2 3 4 5 6 7 8 9
1 2 3 4 5 6 7 8 9
1 2 3 4 5 6 7 8 9
1 2 3 4 5 6 7 8 9
1 2 3 4 5 6 7 8 9


637281365 274562723 911844088 549125446 186406804 823688169 460969527 98250885 735532250
637281365 274562723 911844088 549125446 186406804 823688169 460969527 98250885 735532250
637281365 274562723 911844088 549125446 186406804 823688169 460969527 98250885 735532250 
637281365 274562723 911844088 549125446 186406804 823688169 460969527 98250885 735532250
637281365 274562723 911844088 549125446 186406804 823688169 460969527 98250885 735532250
637281365 274562723 911844088 549125446 186406804 823688169 460969527 98250885 735532250
637281365 274562723 911844088 549125446 186406804 823688169 460969527 98250885 735532250
637281365 274562723 911844088 549125446 186406804 823688169 460969527 98250885 735532250
637281365 274562723 911844088 549125446 186406804 823688169 460969527 98250885 735532250


9 10000
991 992 993 994 995 996 997 998 999
991 992 993 994 995 996 997 998 999
991 992 993 994 995 996 997 998 999
991 992 993 994 995 996 997 998 999
991 992 993 994 995 996 997 998 999
991 992 993 994 995 996 997 998 999
991 992 993 994 995 996 997 998 999
991 992 993 994 995 996 997 998 999
991 992 993 994 995 996 997 998 999
741295992 844970358 948644724 52319083 155993449 259667815 363342181 467016547 570690913
*/